<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- Checkstyle properties for PhenoTips projects -->
<module name="Checker">

  <!--
     ======================================================================================
       Checks that do not require a TreeWalker (sorted alphabetically)
     ======================================================================================
  -->

  <module name="FileLength"/>

  <module name="FileTabCharacter"/>

  <!-- We don't use Checkstyle's facility to check license headers since it's too limited for our needs.
       Instead we use http://code.google.com/p/maven-license-plugin/
  <module name="Header">
    <property name="headerFile" value="${checkstyle.header.file}"/>
    <property name="ignoreLines" value="4,5,6,7"/>
  </module>
  -->

  <module name="NewlineAtEndOfFile">
    <property name="fileExtensions" value="java, xml, js, css, vm"/>
  </module>

  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="crlf"/>
    <property name="fileExtensions" value="bat"/>
  </module>

  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
    <property name="fileExtensions" value="sh"/>
  </module>

  <!-- We'd like to use this one but there's no option to exclude our internal packages
  <module name="PackageHtml"/>
  -->

  <!-- No @author tags -->
  <module name="RegexpSingleline">
    <property name="format" value="@author"/>
    <property name="message" value="No @author tag allowed"/>
  </module>

  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
  </module>

  <!-- We cannot use this rule as it fails on our license headers, considering them as copy-pastes!
  <module name="StrictDuplicateCode"/>
  -->

  <!--  We actually have a lot of incomplete translations so we can't really afford this rule
  <module name="Translation"/>
   -->

  <!--
     ======================================================================================
       Checks that require a TreeWalker (sorted alphabetically)
     ======================================================================================
  -->
  <module name="TreeWalker">

    <!-- Note: for some checks we have defined a warning severity instead of the default error
         severity. This is because we'd like to make the build fail on error for those checks
         but there are errors to fix first -->

    <module name="AbstractClassName">
      <!-- We need to override the default format since by default classes ending with Factory are considered
           abstract and thus need to be defined with the "abstract" keyword. -->
      <property name="format" value="^Abstract.*$"/>
    </module>

    <module name="AnonInnerLength"/>

    <!--module name="ArrayTrailingComma"/-->

    <module name="ArrayTypeStyle"/>

    <!--module name="AvoidInlineConditionals"/-->

    <module name="AvoidNestedBlocks"/>

    <module name="AvoidStarImport"/>

    <module name="BooleanExpressionComplexity"/>

    <module name="ClassDataAbstractionCoupling"/>

    <module name="ClassFanOutComplexity">
      <property name="excludedClasses" value="boolean, byte, char, double, float, int, long, short, void,
        Boolean, Byte, Character, Double, Float, Integer, Long, Short, Void,
        Object, Class, String, StringBuffer, StringBuilder,
        ArrayIndexOutOfBoundsException, Exception, RuntimeException, IllegalArgumentException, IllegalStateException, IndexOutOfBoundsException, NullPointerException, Throwable, SecurityException, UnsupportedOperationException,
        List, ArrayList, Deque, Queue, LinkedList, Set, HashSet, SortedSet, TreeSet, Map, HashMap, LinkedHashMap, SortedMap, TreeMap, Collections, Collection, Iterator, Iterable, Arrays,
        Logger, LoggerFactory, StringUtils, Inject, Named, Component, Role, Singleton"/>
    </module>

    <module name="ClassTypeParameterName"/>

    <module name="ConstantName"/>

    <module name="CovariantEquals"/>

    <module name="CyclomaticComplexity"/>

    <module name="DeclarationOrder"/>

    <module name="DefaultComesLast"/>

    <!-- The default values for this one allow everything to pass. Unneeded.
    <module name="DescendantToken"/>
    -->

    <!--module name="DesignForExtension"/-->

    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>

    <module name="EmptyForInitializerPad"/>

    <module name="EmptyForIteratorPad"/>

    <module name="EmptyStatement"/>

    <module name="EqualsAvoidNull"/>

    <module name="EqualsHashCode"/>

    <module name="ExecutableStatementCount"/>

    <module name="ExplicitInitialization"/>

    <module name="FallThrough"/>

    <module name="FinalClass"/>

    <!--module name="FinalLocalVariable"/-->

    <!--module name="FinalParameters"/-->

    <module name="GenericWhitespace"/>

    <!-- Avoid finalizers (this will not find violations that contain linebreaks) -->
    <module name="RegexpSinglelineJava">
      <property name="format" value="((public)|(protected))\s+void\s+finalize\(\s*\)"/>
      <property name="message" value="Avoid finalizers"/>
      <property name="ignoreComments" value="true"/>
    </module>

    <module name="HiddenField">
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>

    <module name="HideUtilityClassConstructor"/>

    <!--module name="IllegalCatch"/-->

    <module name="IllegalImport">
      <property name="illegalPkgs" value="sun,groovy,org.apache.commons.lang,org.apache.commons.codec.binary,antlr"/>
    </module>

    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean, java.lang.String"/>
    </module>

    <module name="IllegalThrows"/>

    <!--module name="IllegalToken"/-->

    <!--module name="IllegalTokenText"/-->

    <module name="IllegalType"/>

    <!--module name="ImportControl"/-->

    <module name="ImportOrder">
      <property name="groups" value="org.phenotips,org.xwiki,java,javax,org"/>
      <property name="ordered" value="true"/>
      <property name="separated" value="true"/>
    </module>

    <module name="Indentation"/>

    <module name="InnerAssignment"/>

    <!--module name="InterfaceIsType"/-->

    <module name="JavadocMethod">
      <property name="scope" value="public"/>
      <property name="allowUndeclaredRTE" value="true"/>
    </module>

    <module name="JavadocStyle"/>

    <module name="JavadocType">
      <property name="scope" value="public"/>
      <property name="versionFormat" value="\$Id.*\$"/>
    </module>

    <module name="JavadocVariable">
      <property name="scope" value="public"/>
    </module>

    <module name="JavaNCSS"/>

    <module name="LeftCurly">
      <property name="option" value="nl"/>
      <property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>
    </module>

    <module name="LineLength">
      <!-- @(\w+\.)+\w+::\w+\( stands for JSNI method calls: @my.package.MyClass::myMethod() -->
      <property name="ignorePattern" value="(@version|@see|@link|^import|@(\w+\.)+\w+::\w+\()"/>
      <property name="max" value="120"/>
    </module>

    <module name="LocalFinalVariableName"/>

    <module name="LocalVariableName"/>

    <!--module name="MagicNumber"/-->

    <module name="MemberName"/>

    <module name="MethodCount"/>

    <module name="MethodLength"/>

    <!-- Allow for UI methods generated by idea -->
    <module name="MethodName">
      <property name="format" value="^[a-z][a-zA-Z0-9]*$|^\$\$\$setupUI\$\$\$$"/>
    </module>

    <module name="MethodParamPad"/>

    <module name="MethodTypeParameterName"/>

    <!--module name="MissingCtor"/-->

    <module name="MissingDeprecated"/>

    <module name="MissingOverride"/>

    <module name="MissingSwitchDefault"/>

    <module name="ModifiedControlVariable"/>

    <module name="ModifierOrder"/>

    <module name="MultipleStringLiterals">
      <property name="ignoreStringsRegexp" value='^("")|("[0-9]")|(" ")|("\]")|("\[")|(",")|(", ")|("/")$'/>
      <property name="allowedDuplicates" value="4"/>
    </module>

    <module name="MultipleStringLiterals">
      <property name="ignoreStringsRegexp" value='^("")|("[0-9]")|(" ")|("\]")|("\[")|(",")|(", ")|("/")$'/>
      <property name="severity" value="warning"/>
    </module>

    <module name="MultipleVariableDeclarations"/>

    <module name="MutableException"/>

    <module name="NeedBraces"/>

    <module name="NestedForDepth">
      <property name="max" value="2"/>
    </module>

    <module name="NestedIfDepth">
      <property name="max" value="2"/>
    </module>

    <module name="NestedTryDepth"/>

    <!--module name="NoClone"/-->

    <!--module name="NoFinalizer"/-->

    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
    </module>

    <module name="NoWhitespaceBefore"/>

    <module name="NPathComplexity"/>

    <module name="OneStatementPerLine"/>

    <module name="OperatorWrap"/>

    <module name="OuterTypeFilename"/>

    <module name="OuterTypeNumber"/>

    <module name="PackageAnnotation"/>

    <module name="PackageDeclaration"/>

    <module name="PackageName"/>

    <module name="ParameterAssignment"/>

    <module name="ParameterName"/>

    <module name="ParameterNumber"/>

    <module name="ParenPad"/>

    <module name="RedundantImport"/>

    <module name="RedundantModifier"/>

    <!-- No direct printing to System.out or System.err -->
    <module name="RegexpSinglelineJava">
      <!-- . matches any character, so we need to
           escape it and use \. to match dots. -->
      <property name="format" value="System\.(out|err)\."/>
      <property name="ignoreComments" value="true"/>
    </module>

    <!--module name="Regexp"/-->

    <!--module name="RegexpHeader"/-->

    <!-- Disabled until https://github.com/checkstyle/checkstyle/pull/274 is included in a release
    <module name="RequireThis">
      <property name="checkMethods" value="false"/>
    </module>
    -->

    <!--module name="RequiredRegexp"/-->

    <!-- Increasing the maximum number of allowed return statements, as otherwise
         the code will simply use workarounds to hide the same amount of exit points. -->
    <module name="ReturnCount">
      <property name="max" value="5"/>
      <property name="maxForVoid" value="5"/>
    </module>

    <module name="RightCurly"/>

    <module name="SimplifyBooleanExpression"/>

    <module name="SimplifyBooleanReturn"/>

    <module name="StaticVariableName"/>

    <module name="StringLiteralEquality"/>

    <module name="SuperClone"/>

    <module name="SuperFinalize"/>

    <!--module name="ThrowsCount"-->

    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="TODO"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="FIXME"/>
    </module>
    <module name="TodoComment">
      <property name="severity" value="warning"/>
      <property name="format" value="@todo"/>
    </module>

    <module name="TrailingComment"/>

    <module name="TypeName"/>

    <module name="TypecastParenPad"/>

    <module name="UncommentedMain">
      <property name="excludedClasses" value=".*Main$"/>
    </module>

    <!--module name="UnnecessaryParentheses"/-->

    <module name="UnusedImports"/>

    <module name="UpperEll"/>

    <module name="VisibilityModifier">
      <property name="protectedAllowed" value="true"/>
      <property name="publicMemberPattern" value="^[a-z][a-zA-Z0-9]*$"/>
    </module>

    <module name="WhitespaceAfter"/>

    <module name="WhitespaceAround"/>

  </module>
</module>
